# Generated by Django 3.0.5 on 2020-04-17 02:09

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CustomizedProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='EspressoShot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Flavor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='FlavorCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name_plural': 'Flavor Categories',
            },
        ),
        migrations.CreateModel(
            name='FoamChoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='IceChoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Juice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Milk',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('price', models.DecimalField(decimal_places=2, help_text='base price of the product, does not include cost of size increases', max_digits=4)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='RoomChoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Sweetener',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Tea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='TempChoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='ToppingCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name_plural': 'Topping Categories',
            },
        ),
        migrations.CreateModel(
            name='ToppingChoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Topping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('allowed_choices', models.ManyToManyField(to='api.ToppingChoice')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.ToppingCategory')),
                ('default_choice', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='default_toppings', to='api.ToppingChoice')),
            ],
        ),
        migrations.CreateModel(
            name='ProductTopping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('is_active', models.BooleanField(default=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Product')),
                ('topping', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Topping')),
            ],
        ),
        migrations.CreateModel(
            name='ProductTea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('is_active', models.BooleanField(default=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Product')),
                ('tea', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Tea')),
            ],
        ),
        migrations.CreateModel(
            name='ProductSweetener',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Product')),
                ('sweetener', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Sweetener')),
            ],
        ),
        migrations.CreateModel(
            name='ProductSize',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('default_flavor_pumps', models.PositiveSmallIntegerField(default=0, help_text='default number of pumps of sauce and syrup for the product size')),
                ('default_espresso_shots', models.PositiveSmallIntegerField(default=0, help_text='default number of espresso shots for the product size')),
                ('default_tea_quantity', models.PositiveSmallIntegerField(default=0, help_text='default number of teas for the product size')),
                ('is_active', models.BooleanField(default=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Product')),
                ('size', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Size')),
            ],
        ),
        migrations.CreateModel(
            name='ProductMilk',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('is_active', models.BooleanField(default=True)),
                ('milk', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Milk')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductJuice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('is_active', models.BooleanField(default=True)),
                ('juice', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Juice')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductFlavor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('is_active', models.BooleanField(default=True)),
                ('flavor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Flavor')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductEspressoShot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('espresso_shot', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.EspressoShot')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Product')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='allowed_espresso_shots',
            field=models.ManyToManyField(through='api.ProductEspressoShot', to='api.EspressoShot'),
        ),
        migrations.AddField(
            model_name='product',
            name='allowed_flavors',
            field=models.ManyToManyField(through='api.ProductFlavor', to='api.Flavor'),
        ),
        migrations.AddField(
            model_name='product',
            name='allowed_ice',
            field=models.ManyToManyField(blank=True, to='api.IceChoice'),
        ),
        migrations.AddField(
            model_name='product',
            name='allowed_juices',
            field=models.ManyToManyField(through='api.ProductJuice', to='api.Juice'),
        ),
        migrations.AddField(
            model_name='product',
            name='allowed_milk_foams',
            field=models.ManyToManyField(blank=True, to='api.FoamChoice'),
        ),
        migrations.AddField(
            model_name='product',
            name='allowed_milk_temps',
            field=models.ManyToManyField(blank=True, to='api.TempChoice'),
        ),
        migrations.AddField(
            model_name='product',
            name='allowed_milks',
            field=models.ManyToManyField(blank=True, through='api.ProductMilk', to='api.Milk'),
        ),
        migrations.AddField(
            model_name='product',
            name='allowed_room',
            field=models.ManyToManyField(blank=True, to='api.RoomChoice'),
        ),
        migrations.AddField(
            model_name='product',
            name='allowed_sizes',
            field=models.ManyToManyField(blank=True, through='api.ProductSize', to='api.Size'),
        ),
        migrations.AddField(
            model_name='product',
            name='allowed_sweeteners',
            field=models.ManyToManyField(through='api.ProductSweetener', to='api.Sweetener'),
        ),
        migrations.AddField(
            model_name='product',
            name='allowed_teas',
            field=models.ManyToManyField(through='api.ProductTea', to='api.Tea'),
        ),
        migrations.AddField(
            model_name='product',
            name='allowed_toppings',
            field=models.ManyToManyField(through='api.ProductTopping', to='api.Topping'),
        ),
        migrations.AddField(
            model_name='product',
            name='default_espresso_shots',
            field=models.ManyToManyField(blank=True, related_name='default_products', to='api.ProductEspressoShot'),
        ),
        migrations.AddField(
            model_name='product',
            name='default_flavors',
            field=models.ManyToManyField(blank=True, related_name='default_products', to='api.ProductFlavor'),
        ),
        migrations.AddField(
            model_name='product',
            name='default_ice',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='default_products', to='api.IceChoice'),
        ),
        migrations.AddField(
            model_name='product',
            name='default_juices',
            field=models.ManyToManyField(blank=True, related_name='default_products', to='api.ProductJuice'),
        ),
        migrations.AddField(
            model_name='product',
            name='default_milk',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='default_products', to='api.ProductMilk'),
        ),
        migrations.AddField(
            model_name='product',
            name='default_milk_foam',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='default_products', to='api.FoamChoice'),
        ),
        migrations.AddField(
            model_name='product',
            name='default_milk_temp',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='default_products', to='api.TempChoice'),
        ),
        migrations.AddField(
            model_name='product',
            name='default_room',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='default_products', to='api.RoomChoice'),
        ),
        migrations.AddField(
            model_name='product',
            name='default_size',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='default_products', to='api.ProductSize'),
        ),
        migrations.AddField(
            model_name='product',
            name='default_sweeteners',
            field=models.ManyToManyField(blank=True, related_name='default_products', to='api.ProductSweetener'),
        ),
        migrations.AddField(
            model_name='product',
            name='default_teas',
            field=models.ManyToManyField(blank=True, related_name='default_products', to='api.ProductTea'),
        ),
        migrations.AddField(
            model_name='product',
            name='default_toppings',
            field=models.ManyToManyField(blank=True, related_name='default_products', to='api.ProductTopping'),
        ),
        migrations.AddField(
            model_name='flavor',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.FlavorCategory'),
        ),
        migrations.CreateModel(
            name='CustomizedProductTopping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('customized_product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.CustomizedProduct')),
                ('product_topping', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.ProductTopping')),
            ],
        ),
        migrations.CreateModel(
            name='CustomizedProductTea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('customized_product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.CustomizedProduct')),
                ('product_tea', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.ProductTea')),
            ],
        ),
        migrations.CreateModel(
            name='CustomizedProductSweetener',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('customized_product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.CustomizedProduct')),
                ('product_sweetener', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.ProductSweetener')),
            ],
        ),
        migrations.CreateModel(
            name='CustomizedProductJuice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('customized_product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.CustomizedProduct')),
                ('product_juice', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.ProductJuice')),
            ],
        ),
        migrations.CreateModel(
            name='CustomizedProductFlavor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('customized_product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.CustomizedProduct')),
                ('product_flavor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.ProductFlavor')),
            ],
        ),
        migrations.CreateModel(
            name='CustomizedProductEspressoShot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('customized_product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.CustomizedProduct')),
                ('product_espresso_shot', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.ProductEspressoShot')),
            ],
        ),
        migrations.AddField(
            model_name='customizedproduct',
            name='espresso_shots',
            field=models.ManyToManyField(through='api.CustomizedProductEspressoShot', to='api.ProductEspressoShot'),
        ),
        migrations.AddField(
            model_name='customizedproduct',
            name='flavors',
            field=models.ManyToManyField(through='api.CustomizedProductFlavor', to='api.ProductFlavor'),
        ),
        migrations.AddField(
            model_name='customizedproduct',
            name='ice',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.IceChoice'),
        ),
        migrations.AddField(
            model_name='customizedproduct',
            name='juices',
            field=models.ManyToManyField(through='api.CustomizedProductJuice', to='api.ProductJuice'),
        ),
        migrations.AddField(
            model_name='customizedproduct',
            name='milk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.ProductMilk'),
        ),
        migrations.AddField(
            model_name='customizedproduct',
            name='milk_foam',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.FoamChoice'),
        ),
        migrations.AddField(
            model_name='customizedproduct',
            name='milk_temp',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.TempChoice'),
        ),
        migrations.AddField(
            model_name='customizedproduct',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Product'),
        ),
        migrations.AddField(
            model_name='customizedproduct',
            name='room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.RoomChoice'),
        ),
        migrations.AddField(
            model_name='customizedproduct',
            name='size',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.ProductSize'),
        ),
        migrations.AddField(
            model_name='customizedproduct',
            name='sweeteners',
            field=models.ManyToManyField(through='api.CustomizedProductSweetener', to='api.ProductSweetener'),
        ),
        migrations.AddField(
            model_name='customizedproduct',
            name='teas',
            field=models.ManyToManyField(through='api.CustomizedProductTea', to='api.ProductTea'),
        ),
        migrations.AddField(
            model_name='customizedproduct',
            name='toppings',
            field=models.ManyToManyField(through='api.CustomizedProductTopping', to='api.ProductTopping'),
        ),
    ]
