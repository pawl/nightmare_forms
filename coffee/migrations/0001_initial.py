# Generated by Django 3.0.5 on 2020-04-05 21:20

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EspressoShot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Flavor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='FlavorCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name_plural': 'Flavor Categories',
            },
        ),
        migrations.CreateModel(
            name='Juice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Milk',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_name', models.CharField(max_length=200)),
                ('special_instructions', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('total', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('price', models.DecimalField(decimal_places=2, max_digits=4)),
                ('allowed_ice', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(choices=[(0, 'No'), (1, 'Light'), (2, 'Regular'), (3, 'Extra')]), blank=True, null=True, size=None)),
                ('default_ice', models.IntegerField(choices=[(0, 'No'), (1, 'Light'), (2, 'Regular'), (3, 'Extra')], null=True)),
                ('allowed_room', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(choices=[(0, 'No'), (1, 'Light'), (2, 'Regular'), (3, 'Extra')]), blank=True, null=True, size=None)),
                ('default_room', models.IntegerField(choices=[(0, 'No'), (1, 'Light'), (2, 'Regular'), (3, 'Extra')], null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Sweetener',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Tea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='ToppingCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name_plural': 'Topping Categories',
            },
        ),
        migrations.CreateModel(
            name='Topping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_choice', models.IntegerField(choices=[(0, 'No'), (1, 'Light'), (2, 'Regular'), (3, 'Extra')], null=True)),
                ('allowed_choices', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(choices=[(0, 'No'), (1, 'Light'), (2, 'Regular'), (3, 'Extra')]), size=None)),
                ('name', models.CharField(max_length=200)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='coffee.ToppingCategory')),
            ],
        ),
        migrations.CreateModel(
            name='ProductTopping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('is_active', models.BooleanField(default=True)),
                ('is_default', models.BooleanField(default=False)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='coffee.Product')),
                ('topping', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='coffee.Topping')),
            ],
        ),
        migrations.CreateModel(
            name='ProductTea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('is_active', models.BooleanField(default=True)),
                ('is_default', models.BooleanField(default=False)),
                ('default_quantity', models.IntegerField()),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='coffee.Product')),
                ('topping', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='coffee.Tea')),
            ],
        ),
        migrations.CreateModel(
            name='ProductSweetener',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_quantity', models.IntegerField()),
                ('is_active', models.BooleanField(default=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='coffee.Product')),
                ('sweetener', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='coffee.Sweetener')),
            ],
        ),
        migrations.CreateModel(
            name='ProductSize',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('flavor_pumps', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='coffee.Product')),
                ('size', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='coffee.Size')),
            ],
        ),
        migrations.CreateModel(
            name='ProductMilk',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_temp', models.IntegerField(choices=[(0, 'Cold'), (1, 'Extra Hot'), (2, 'Warm')], null=True)),
                ('allowed_temp', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(choices=[(0, 'Cold'), (1, 'Extra Hot'), (2, 'Warm')]), size=None)),
                ('default_foam', models.IntegerField(choices=[(0, 'Regular'), (1, 'Extra Wet'), (2, 'Extra Dry'), (3, 'Dry'), (4, 'Wet')], null=True)),
                ('allowed_foam', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(choices=[(0, 'Regular'), (1, 'Extra Wet'), (2, 'Extra Dry'), (3, 'Dry'), (4, 'Wet')]), size=None)),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('is_active', models.BooleanField(default=True)),
                ('milk', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='coffee.Milk')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='coffee.Product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductJuice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('is_active', models.BooleanField(default=True)),
                ('is_default', models.BooleanField(default=False)),
                ('juice', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='coffee.Juice')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='coffee.Product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductFlavor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('is_active', models.BooleanField(default=True)),
                ('is_default', models.BooleanField(default=False)),
                ('flavor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='coffee.Flavor')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='coffee.Product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductEspressoShot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_quantity', models.IntegerField(default=1)),
                ('is_active', models.BooleanField(default=True)),
                ('espresso_shot', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='coffee.EspressoShot')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='coffee.Product')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='allowed_espresso_shots',
            field=models.ManyToManyField(through='coffee.ProductEspressoShot', to='coffee.EspressoShot'),
        ),
        migrations.AddField(
            model_name='product',
            name='allowed_juices',
            field=models.ManyToManyField(through='coffee.ProductJuice', to='coffee.Juice'),
        ),
        migrations.AddField(
            model_name='product',
            name='allowed_milks',
            field=models.ManyToManyField(through='coffee.ProductMilk', to='coffee.Milk'),
        ),
        migrations.AddField(
            model_name='product',
            name='allowed_sizes',
            field=models.ManyToManyField(through='coffee.ProductSize', to='coffee.Size'),
        ),
        migrations.AddField(
            model_name='product',
            name='allowed_sweeteners',
            field=models.ManyToManyField(through='coffee.ProductSweetener', to='coffee.Sweetener'),
        ),
        migrations.AddField(
            model_name='product',
            name='allowed_teas',
            field=models.ManyToManyField(through='coffee.ProductTea', to='coffee.Tea'),
        ),
        migrations.AddField(
            model_name='product',
            name='allowed_toppings',
            field=models.ManyToManyField(through='coffee.ProductTopping', to='coffee.Topping'),
        ),
        migrations.AddField(
            model_name='product',
            name='default_espresso_shots',
            field=models.ManyToManyField(related_name='default_products', to='coffee.ProductEspressoShot'),
        ),
        migrations.AddField(
            model_name='product',
            name='default_juices',
            field=models.ManyToManyField(related_name='default_products', to='coffee.ProductJuice'),
        ),
        migrations.AddField(
            model_name='product',
            name='default_milk',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='default_products', to='coffee.ProductMilk'),
        ),
        migrations.AddField(
            model_name='product',
            name='default_size',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='default_products', to='coffee.ProductSize'),
        ),
        migrations.AddField(
            model_name='product',
            name='default_sweeteners',
            field=models.ManyToManyField(related_name='default_products', to='coffee.ProductSweetener'),
        ),
        migrations.AddField(
            model_name='product',
            name='default_teas',
            field=models.ManyToManyField(related_name='default_products', to='coffee.ProductTea'),
        ),
        migrations.AddField(
            model_name='product',
            name='default_toppings',
            field=models.ManyToManyField(related_name='default_products', to='coffee.ProductTopping'),
        ),
        migrations.CreateModel(
            name='OrderItemProductTopping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('product_topping', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='coffee.ProductTopping')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItemProductTea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('product_tea', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='coffee.ProductTea')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItemProductSweetener',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('product_sweetener', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='coffee.ProductSweetener')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItemProductJuice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('product_juice', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='coffee.ProductJuice')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItemProductFlavor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('product_flavor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='coffee.ProductFlavor')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItemProductEspressoShot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('product_espresso_shot', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='coffee.ProductEspressoShot')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=1)),
                ('total', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('ice', models.IntegerField(choices=[(0, 'No'), (1, 'Light'), (2, 'Regular'), (3, 'Extra')], null=True)),
                ('room', models.IntegerField(choices=[(0, 'No'), (1, 'Light'), (2, 'Regular'), (3, 'Extra')], null=True)),
                ('espresso_shots', models.ManyToManyField(to='coffee.OrderItemProductEspressoShot')),
                ('flavors', models.ManyToManyField(to='coffee.OrderItemProductFlavor')),
                ('juices', models.ManyToManyField(to='coffee.OrderItemProductJuice')),
                ('milk', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='coffee.ProductMilk')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coffee.Order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='coffee.Product')),
                ('size', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='coffee.ProductSize')),
                ('sweeteners', models.ManyToManyField(to='coffee.OrderItemProductSweetener')),
                ('teas', models.ManyToManyField(to='coffee.OrderItemProductTea')),
                ('toppings', models.ManyToManyField(to='coffee.OrderItemProductTopping')),
            ],
        ),
        migrations.AddField(
            model_name='flavor',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='coffee.FlavorCategory'),
        ),
    ]
